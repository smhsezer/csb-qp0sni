{"version":3,"sources":["Component.js","App.js","index.js"],"names":["CToastify","CForm","props","useState","validated","setValidated","action","items","values","Form","noValidate","onSubmit","event","form","currentTarget","preventDefault","stopPropagation","checkValidity","elements","i","len","length","options","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","toast","success","text","error","Toastify","className","map","el","idx","Group","as","Col","controlId","Math","random","Label","Control","required","name","id","rows","placeholder","defaultValue","Feedback","Button","variant","App","state","lang","value","origin","dimention","breakpoint","pRatio","pagename","site","content","this","pages","filter","o","forEach","element","cont","refPage","find","uid","refId","push","logoUrl","Container","fluid","Navbar","bg","expand","Brand","href","src","Toggle","Collapse","Nav","menu","item","index","Link","url","txt","Dropdown","Menu","Item","animationIn","animationOut","isVisible","Row","img","w","alt","title","Carousel","Caption","cards","Card","style","width","Img","Body","Title","Text","ReactHtmlParser","list","idx2","maxWidth","defaultActiveKey","eventKey","disabled","React","Component","rootElement","document","getElementById","root","createRoot","window","innerWidth","innerHeight","devicePixelRatio","split","init","a","axios","get","data","render","path","h"],"mappings":"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","file":"static/js/main.c3f9e0a1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport function Toastify(props) {\n  const options = {\n    position: \"top-center\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n  };\n  switch (props.type) {\n    case \"success\":\n      toast.success(props.text, options);\n      break;\n    case \"error\":\n      toast.error(props.text, options);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function CToastify() {\n  return <ToastContainer />;\n}\n\nexport function CForm(props) {\n  const [validated, setValidated] = useState(false);\n  const [action] = useState(props.action);\n  const [items] = useState(props.items);\n  const values = {};\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      const elements = form.elements;\n      for (let i = 0, len = elements.length; i < len; i++) {\n        values[elements[i][\"name\"]] = elements[i][\"value\"];\n      }\n      Toastify({ type: \"success\", text: \"Mesajınız başarıyla bize iletildi.\" });\n    }\n    setValidated(true);\n  };\n\n  return (\n    <Form\n      noValidate\n      validated={validated}\n      onSubmit={handleSubmit}\n      className=\"p-3 col-12 col-md-6 mx-auto border\"\n    >\n      {items.map((el, idx) => (\n        <Form.Group as={Col} controlId={Math.random()}>\n          <Form.Label>{el.text}</Form.Label>\n          {el.type === \"textarea\" ? (\n            <Form.Control required as=\"textarea\" name={el.id} rows={4} />\n          ) : (\n            <Form.Control\n              required\n              type={el.type}\n              name={el.id}\n              placeholder={el.text}\n              defaultValue=\"\"\n            />\n          )}\n          <Form.Control.Feedback type=\"invalid\">\n            {el.error}\n          </Form.Control.Feedback>\n        </Form.Group>\n      ))}\n      <Button variant=\"primary\" type=\"submit\" name=\"button\" className=\"mt-3\">\n        {action.text}\n      </Button>\n    </Form>\n  );\n}\n","import React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Navbar,\n  Nav,\n  Carousel,\n  Card,\n  Dropdown\n} from \"react-bootstrap\";\nimport { Animated } from \"react-animated-css\";\nimport { CForm, CToastify } from \"./Component\";\nimport \"./styles.css\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lang: props.value.lang,\n      origin: props.value.origin,\n      dimention: props.value.dimention,\n      breakpoint: props.value.breakpoint,\n      pRatio: props.value.pRatio,\n      pagename: props.value.pagename,\n      site: props.value.site\n    };\n  }\n\n  init() {\n    const content = this.state.site.pages[this.state.pagename];\n    const refArr = content.filter((o) => o.id === \"ref\");\n    refArr.forEach((element) => {\n      const cont = this.state.site.pages[element.refPage].content.find(\n        (o) => o.uid === element.refId\n      );\n      content.push(cont);\n    });\n  }\n\n  render() {\n    const path = this.state.origin;\n    const logoUrl = path + \"/img/logo.svg\";\n    return (\n      <Container className=\"m-0 p-0\" fluid>\n        <header>\n          <Navbar bg=\"light\" expand=\"lg\">\n            <Container>\n              <Navbar.Brand href=\"/\" className=\"col-3 col-md-2\">\n                <img className=\"col-12\" src={logoUrl} />\n              </Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"me-auto\">\n                  {this.state.site.menu.map((item, index) => (\n                    <Nav.Link\n                      key={index + Math.random()}\n                      href={\"/\" + this.state.lang + item.url}\n                      className=\"hvr-sweep-to-right ps-1\"\n                    >\n                      {item.txt}\n                    </Nav.Link>\n                  ))}\n                </Nav>\n                <Dropdown>\n                  <Dropdown.Toggle\n                    variant=\"success\"\n                    id=\"dropdown-basic\"\n                    className=\"text-capitalize\"\n                  >\n                    {this.state.lang}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    <Dropdown.Item href=\"/tr/\">Tr</Dropdown.Item>\n                    <Dropdown.Item href=\"/en/\">En</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n        </header>\n        {this.state.site.pages[this.state.pagename].content.map((item, index) =>\n          (() => {\n            if (item.id === \"banner\") {\n              return (\n                <Animated\n                  key={Math.random()}\n                  animationIn=\"bounceInUp\"\n                  animationOut=\"bounceOutUp\"\n                  isVisible={true}\n                >\n                  <Row className=\"position-relative mb-5\">\n                    <img\n                      className=\"d-block w-100\"\n                      src={\n                        this.state.origin +\n                        \"/img/\" +\n                        item.img +\n                        (this.state.dimention.w > 768 ? \"\" : \"_md\") +\n                        \".webp\"\n                      }\n                      alt={item.title}\n                    />\n                    <h1 className=\"bg-white w-auto p-2 position-absolute top-100 start-50 translate-middle\">\n                      {item.title}\n                    </h1>\n                  </Row>\n                </Animated>\n              );\n            }\n            if (item.id === \"slider\") {\n              return (\n                <Carousel key={Math.random()}>\n                  {item.text.map((el, idx) => (\n                    <Carousel.Item key={idx}>\n                      <img\n                        className=\"d-block w-100\"\n                        src={\n                          this.state.origin +\n                          \"/img/slide-\" +\n                          (idx + 1) +\n                          this.state.breakpoint +\n                          \".webp\"\n                        }\n                        alt={el}\n                      />\n                      <Carousel.Caption>\n                        <h3 className=\"text-shadow-1\">{el}</h3>\n                      </Carousel.Caption>\n                    </Carousel.Item>\n                  ))}\n                </Carousel>\n              );\n            } else if (item.id === \"card\") {\n              return (\n                <Row\n                  key={Math.random()}\n                  className=\"justify-content-center col-12 col-lg-8 mx-auto my-3\"\n                >\n                  {item.title === null ? (\n                    \"\"\n                  ) : (\n                    <h2 className=\"border-bottom\">{item.title}</h2>\n                  )}\n                  {item.cards.map((el, idx) => (\n                    <Card\n                      key={idx + Math.random()}\n                      className=\"m-3 pt-2\"\n                      style={{ width: \"300px\" }}\n                    >\n                      <Card.Img\n                        variant=\"top\"\n                        src={\n                          this.state.origin +\n                          \"/img/\" +\n                          el.img +\n                          (this.state.pRatio > 1 ? \"\" : \"_sm\") +\n                          \".webp\"\n                        }\n                        alt={el.title === null ? \"\" : el.title}\n                      />\n                      <Card.Body>\n                        {el.title === null ? (\n                          \"\"\n                        ) : (\n                          <Card.Title>{el.title}</Card.Title>\n                        )}\n                        {el.text === null ? (\n                          \"\"\n                        ) : (\n                          <Card.Text>{ReactHtmlParser(el.text)}</Card.Text>\n                        )}\n                        {el.action === null ? (\n                          \"\"\n                        ) : (\n                          <Button variant=\"primary\">{el.action.text}</Button>\n                        )}\n                      </Card.Body>\n                    </Card>\n                  ))}\n                </Row>\n              );\n            } else if (item.id === \"list-slider\") {\n              return (\n                <Row\n                  key={Math.random()}\n                  className=\"justify-content-center col-12 col-lg-8 mx-auto my-3\"\n                >\n                  {item.title === null ? (\n                    \"\"\n                  ) : (\n                    <h2 className=\"border-bottom\">{item.title}</h2>\n                  )}\n                  <Carousel variant=\"dark\" className=\"p-0 my-3\">\n                    {item.list.map((el, idx) => (\n                      <Carousel.Item key={idx + Math.random()}>\n                        <div className=\"d-flex justify-content-around\">\n                          {el.map((el, idx2) => (\n                            <img\n                              key={idx2 + Math.random()}\n                              style={{ maxWidth: \"128px\" }}\n                              className=\"img-fluid col-3\"\n                              src={\n                                this.state.origin +\n                                \"/img/\" +\n                                el.img +\n                                (this.state.pRatio > 1 ? \"\" : \"_sm\") +\n                                \".webp\"\n                              }\n                              alt={el.text === null ? \"\" : el.text}\n                            />\n                          ))}\n                        </div>\n                      </Carousel.Item>\n                    ))}\n                  </Carousel>\n                </Row>\n              );\n            } else if (item.id === \"p\") {\n              return (\n                <Row\n                  key={Math.random()}\n                  className=\"mx-auto p-3 col-12 col-xxl-7 col-xl-8 col-lg-9 col-md-10 col-sm-12\"\n                >\n                  {ReactHtmlParser(item.text)}\n                </Row>\n              );\n            } else if (item.id === \"form\") {\n              return (\n                <CForm\n                  key={Math.random()}\n                  action={item.action}\n                  items={item.items}\n                />\n              );\n            }\n          })()\n        )}\n        <footer className=\"mt-5 bg-dark text-white p-3\">\n          <Row>\n            <Col>\n              Postane Mah. Gökyüzü Sok. No:1 34940 Tuzla/İstanbul - TURKIYE\n              shipmanagement@pacifictr.com Phone: +90 216 446 55 55 pbx Fax: +90\n              216 446 55 60 pbx\n            </Col>\n            <Col>\n              <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\n                <Nav.Link href=\"/home\">Active</Nav.Link>\n                <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\n                <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\n                <Nav.Link eventKey=\"disabled\" disabled>\n                  Disabled\n                </Nav.Link>\n              </Nav>\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <p className=\"text-center\">Tüm Hakları Saklıdır © 2022</p>\n          </Row>\n        </footer>\n        <CToastify />\n      </Container>\n    );\n  }\n}\n","//import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\n//Detect Screen Size\nconst { innerWidth, innerHeight, devicePixelRatio } = window;\nlet breakpoint = \"\";\nconst w = innerWidth * devicePixelRatio;\nif (w <= 576) {\n  breakpoint = \"_sm\";\n} else if (w <= 768) {\n  breakpoint = \"_md\";\n} else if (w <= 1200) {\n  breakpoint = \"_xl\";\n} else if (w <= 1400) {\n  breakpoint = \"_xxl\";\n} else {\n  breakpoint = \"\";\n}\n\n//Detect Lang\nconst fakeLocation = {\n  origin: \"https://b1r.site\",\n  pathname: \"/tr/deneme\"\n};\nconst { origin, pathname } = fakeLocation; //document.location\nconst pathArr = pathname.split(\"/\");\nconst lang = pathArr[1];\nconst url = origin + \"/json/site-rodasshipgroup.com-\" + lang;\n\nconst init = async () => {\n  const site = await axios.get(url);\n  const menu = site.data.menu;\n\n  root.render(\n    <BrowserRouter>\n      <Routes>\n        {menu.map((item, index) => (\n          <Route\n            key={index}\n            path={\"/\" + lang + item.url}\n            element={\n              <App\n                value={{\n                  lang: lang,\n                  origin: origin,\n                  dimention: { w: innerWidth, h: innerHeight },\n                  breakpoint: breakpoint,\n                  pRatio: devicePixelRatio,\n                  pagename: item.name,\n                  site: site.data\n                }}\n              />\n            }\n          />\n        ))}\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\ninit();\n"],"sourceRoot":""}