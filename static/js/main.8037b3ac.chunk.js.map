{"version":3,"sources":["Component.js","General.js","App.js","index.js"],"names":["Toastify","props","options","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","toast","info","text","success","error","CToastify","CHeader","state","origin","value","assetsPath","lang","logo","menu","show","e","window","innerWidth","document","getElementById","click","pageId","target","dataset","id","Navbar","bg","expand","className","Container","Brand","as","Link","to","this","animate","stt","Image","style","zIndex","src","img","onLoad","classList","add","class","onTransitionEnd","nextElementSibling","opacity","alt","replace","Toggle","Collapse","Nav","map","item","index","url","onClick","handleNavClick","name","txt","Math","random","Dropdown","variant","Menu","Item","href","React","Component","CPage","dimention","breakpoint","pRatio","pages","title","metatitle","querySelector","setAttribute","description","content","div","initial","width","exit","x","transition","duration","minHeight","w","remove","role","Carousel","uid","height","el","idx","Caption","Row","cards","Card","Img","Body","Title","ReactHtmlParser","action","Button","list","idx2","maxWidth","CForm","items","values","Form","Group","Col","controlId","Label","Control","required","rows","placeholder","defaultValue","event","s","form","parentElement","checkValidity","resText","i","elements","len","length","subject","toUpperCase","slice","messageHtml","prop","data","entry","from","method","JSON","stringify","axios","then","response","catch","reportValidity","App","site","location","useLocation","fluid","path","element","pathname","footer","copyright","rootElement","root","createRoot","innerHeight","devicePixelRatio","hostname","split","getElementsByTagName","init","post","file","rawSite","shortTitle","theme","color","forEach","filter","o","cont","refPage","find","refId","push","render","h"],"mappings":"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","file":"static/js/main.8037b3ac.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport {\n  Form,\n  Button,\n  Col,\n  Navbar,\n  Nav,\n  Container,\n  Dropdown,\n  Carousel,\n  Row,\n  Card,\n  Image\n} from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport { motion } from \"framer-motion/dist/framer-motion\";\nimport { capitalizeText } from \"./General\";\n\nexport function Toastify(props) {\n  const options = {\n    position: \"top-center\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n  };\n  switch (props.type) {\n    case \"info\":\n      toast.info(props.text, options);\n      break;\n    case \"success\":\n      toast.success(props.text, options);\n      break;\n    case \"error\":\n      toast.error(props.text, options);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function CToastify() {\n  return <ToastContainer />;\n}\n\nexport class CHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      origin: props.value.origin,\n      assetsPath: props.value.assetsPath,\n      lang: props.value.lang,\n      logo: props.value.logo,\n      menu: props.value.menu,\n      show: false\n    };\n  }\n\n  handleNavClick(e) {\n    if (window.innerWidth <= 992) {\n      document.getElementById(\"basic-navbar-nav-toggle\").click();\n    }\n    window.pageId = e.target.dataset.id;\n  }\n\n  render() {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\" className=\"pb-4\">\n        <Container>\n          <Navbar.Brand\n            as={Link}\n            to={\"/\" + this.state.lang + \"/\"}\n            className=\"col-3 col-md-2 position-relative\"\n          >\n            {(() => {\n              if (this.state.logo.animate.stt) {\n                return (\n                  <Image\n                    style={{ zIndex: \"999999\" }}\n                    className={\"col-12 position-absolute\"}\n                    src={\n                      this.state.assetsPath +\n                      \"/img\" +\n                      this.state.logo.animate.img\n                    }\n                    onLoad={(e) => {\n                      e.target.classList.add(this.state.logo.animate.class);\n                    }}\n                    onTransitionEnd={(e) => {\n                      e.target.classList.add(\"fadeOut\");\n                      e.target.nextElementSibling.classList.add(\"fadeIn\");\n                    }}\n                  ></Image>\n                );\n              }\n            })()}\n            <Image\n              className=\"col-12\"\n              style={\n                this.state.logo.animate.stt ? { opacity: 0 } : { opacity: 1 }\n              }\n              src={this.state.assetsPath + \"/img\" + this.state.logo.img}\n              alt={this.state.origin.replace(\"https://\", \"\") + \" logo\"}\n            ></Image>\n          </Navbar.Brand>\n          <Navbar.Toggle\n            aria-controls=\"basic-navbar-nav\"\n            id=\"basic-navbar-nav-toggle\"\n          />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              {this.state.menu.map((item, index) => (\n                <Nav.Link\n                  key={index + Math.random()}\n                  as={Link}\n                  to={\"/\" + this.state.lang + item.url}\n                  className=\"hvr-sweep-to-right ps-1\"\n                  onClick={this.handleNavClick}\n                  data-id={item.name}\n                >\n                  {item.txt}\n                </Nav.Link>\n              ))}\n            </Nav>\n            <Dropdown>\n              <Dropdown.Toggle\n                variant=\"success\"\n                id=\"dropdown-basic\"\n                className=\"text-capitalize\"\n              >\n                {this.state.lang}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item href=\"/tr/\">Tr</Dropdown.Item>\n                <Dropdown.Item href=\"/en/\">En</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport function CPage(props) {\n  const state = {\n    lang: props.value.lang,\n    assetsPath: props.value.assetsPath,\n    origin: props.value.origin,\n    dimention: props.value.dimention,\n    breakpoint: props.value.breakpoint,\n    pRatio: props.value.pRatio,\n    pages: props.value.pages,\n    pageId: props.value.pageId\n  };\n\n  document.title = state.pages[state.pageId].metatitle;\n  document\n    .querySelector('meta[name=\"description\"]')\n    .setAttribute(\"content\", state.pages[state.pageId].description);\n\n  return (\n    <div id={state.pageId} data-type=\"page\">\n      {state.pages[state.pageId].content.map((item, index) =>\n        (() => {\n          if (item.id === \"banner\") {\n            return (\n              <motion.div\n                key={Math.random()}\n                className=\"position-relative mb-5 bg-light\"\n                initial={{ width: 0 }}\n                animate={{ width: \"100%\" }}\n                exit={{ x: window.innerWidth, transition: { duration: 0.1 } }}\n                style={{ minHeight: (window.innerWidth * 26) / 100 }}\n              >\n                <Image\n                  className=\"d-block w-100\"\n                  src={\n                    state.assetsPath +\n                    \"/img/banner/\" +\n                    item.img +\n                    (state.dimention.w > 768 ? \"\" : \"_md\") +\n                    \".webp\"\n                  }\n                  alt={item.title}\n                  data-animate=\"animate__zoomIn\"\n                  onLoad={(e) => {\n                    e.target.nextElementSibling.remove();\n                  }}\n                ></Image>\n                <div className=\"d-flex justify-content-center\">\n                  <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                  </div>\n                </div>\n                <h1 className=\"bg-white w-auto p-2 position-absolute top-100 start-50 translate-middle\">\n                  {item.title}\n                </h1>\n              </motion.div>\n            );\n          } else if (item.id === \"slider\") {\n            return (\n              <motion.div\n                key={Math.random()}\n                initial={{ width: 0 }}\n                animate={{ width: \"100%\" }}\n                exit={{ x: window.innerWidth, transition: { duration: 0.1 } }}\n              >\n                <Carousel\n                  id={item.uid}\n                  key={Math.random()}\n                  className=\"d-flex\"\n                  style={{ height: \"0\" }}\n                >\n                  {item.text.map((el, idx) => (\n                    <Carousel.Item key={idx}>\n                      <img\n                        className=\"d-block w-100\"\n                        src={\n                          state.assetsPath +\n                          \"/img/slides/slide-\" +\n                          (idx + 1) +\n                          state.breakpoint +\n                          \".webp\"\n                        }\n                        alt={el}\n                        onLoad={(e) => {\n                          document\n                            .getElementById(item.uid)\n                            .classList.add(\"sliderLaunch\");\n                        }}\n                      />\n                      <Carousel.Caption>\n                        <h3 className=\"text-shadow-1\">{el}</h3>\n                      </Carousel.Caption>\n                    </Carousel.Item>\n                  ))}\n                </Carousel>\n              </motion.div>\n            );\n          } else if (item.id === \"card\") {\n            return (\n              <Row\n                key={Math.random()}\n                className=\"justify-content-center col-12 col-lg-8 mx-auto my-5\"\n              >\n                {item.title === null ? (\n                  \"\"\n                ) : (\n                  <h2 className=\"border-bottom\">{item.title}</h2>\n                )}\n                {item.cards.map((el, idx) => (\n                  <Card\n                    key={idx + Math.random()}\n                    className=\"m-3 pt-2\"\n                    style={{ width: \"300px\" }}\n                  >\n                    <Card.Img\n                      variant=\"top\"\n                      src={\n                        state.assetsPath +\n                        \"/img/\" +\n                        el.img +\n                        (state.pRatio > 1 ? \"\" : \"_sm\") +\n                        \".webp\"\n                      }\n                      alt={el.title === null ? \"\" : el.title}\n                    />\n                    <Card.Body>\n                      {el.title === null ? (\n                        \"\"\n                      ) : (\n                        <Card.Title>{el.title}</Card.Title>\n                      )}\n                      {el.text === null ? (\n                        \"\"\n                      ) : (\n                        <div>{ReactHtmlParser(el.text)}</div>\n                      )}\n                      {el.action === null ? (\n                        \"\"\n                      ) : (\n                        <Button variant=\"primary\">{el.action.text}</Button>\n                      )}\n                    </Card.Body>\n                  </Card>\n                ))}\n              </Row>\n            );\n          } else if (item.id === \"list-slider\") {\n            return (\n              <Row\n                key={Math.random()}\n                className=\"justify-content-center col-12 col-lg-8 mx-auto my-3\"\n              >\n                {item.title === null ? (\n                  \"\"\n                ) : (\n                  <h2 className=\"border-bottom\">{item.title}</h2>\n                )}\n                <Carousel variant=\"dark\" className=\"p-0 my-3\">\n                  {item.list.map((el, idx) => (\n                    <Carousel.Item key={idx + Math.random()}>\n                      <div className=\"d-flex justify-content-around\">\n                        {el.map((el, idx2) => (\n                          <img\n                            key={idx2 + Math.random()}\n                            style={{ maxWidth: \"128px\" }}\n                            className=\"img-fluid col-3\"\n                            src={\n                              state.assetsPath +\n                              \"/img\" +\n                              el.img +\n                              (state.pRatio > 1 ? \"\" : \"_sm\") +\n                              \".webp\"\n                            }\n                            alt={el.text === null ? \"\" : el.text}\n                          />\n                        ))}\n                      </div>\n                    </Carousel.Item>\n                  ))}\n                </Carousel>\n              </Row>\n            );\n          } else if (item.id === \"p\") {\n            return (\n              <Row\n                key={Math.random()}\n                className=\"mx-auto p-3 col-12 col-xxl-7 col-xl-8 col-lg-9 col-md-10 col-sm-12\"\n              >\n                {ReactHtmlParser(item.text)}\n              </Row>\n            );\n          } else if (item.id === \"form\") {\n            return (\n              <CForm\n                key={Math.random()}\n                action={item.action}\n                items={item.items}\n                lang={state.lang}\n                origin={state.origin}\n              />\n            );\n          }\n        })()\n      )}\n    </div>\n  );\n}\n\nexport function CForm(props) {\n  const action = props.action;\n  const items = props.items;\n  const values = {};\n  const lang = props.lang;\n  const origin = props.origin;\n\n  const handleSubmit = (event) => {\n    const form = event.target.parentElement;\n\n    if (!form.checkValidity()) {\n      form.reportValidity();\n    } else {\n      let resText = \"\";\n      switch (lang) {\n        case \"en\":\n          resText = {\n            i: \"Sending Your Message...\",\n            s: \"Successfully transmitted\",\n            e: \"Something went wrong. Please try again.\"\n          };\n          break;\n        case \"tr\":\n        default:\n          resText = {\n            i: \"Mesajınız Gönderiliyor...\",\n            s: \"Başarıyla iletildi.\",\n            e: \"Bir hata oluştu. Lütfen tekrar deneyin.\"\n          };\n          break;\n      }\n\n      Toastify({ type: \"info\", text: resText.i });\n\n      const elements = form.elements;\n      for (let i = 0, len = elements.length; i < len; i++) {\n        values[elements[i][\"name\"]] = elements[i][\"value\"];\n      }\n\n      const subject =\n        capitalizeText(window.pageId) + \" - Form (\" + origin + \")\";\n\n      let messageHtml = \"<h1>\" + subject + \"</h1><br>\";\n      for (const prop in values) {\n        if (prop !== \"from\" && prop !== \"button\") {\n          messageHtml +=\n            \"<div><b>\" + prop + \": </b>\" + values[prop] + \"</div><hr></br>\";\n        }\n      }\n\n      const data = {\n        type: \"sendmail\",\n        entry: {\n          subject: subject,\n          from: values[\"from\"],\n          to: values[\"from\"],\n          messageHtml: messageHtml\n        }\n      };\n      const options = {\n        method: \"POST\",\n        data: JSON.stringify(data),\n        url: props.origin + \"/api/\"\n      };\n\n      axios(options)\n        .then(function (response) {\n          Toastify({ type: \"success\", text: resText.s });\n          form.remove();\n        })\n        .catch(function (error) {\n          Toastify({ type: \"success\", text: resText.e });\n        });\n    }\n  };\n\n  return (\n    <Form\n      //noValidate\n      //validated={validated}\n      className=\"p-3 col-12 col-md-6 mx-auto border\"\n    >\n      {items.map((el, idx) => (\n        <Form.Group\n          key={Math.random()}\n          as={Col}\n          controlId={Math.random()}\n          className=\"mt-4\"\n        >\n          <Form.Label>{el.text}</Form.Label>\n          {el.type === \"textarea\" ? (\n            <Form.Control\n              required={el.required}\n              as=\"textarea\"\n              name={el.id}\n              rows={4}\n            />\n          ) : (\n            <Form.Control\n              required={el.required}\n              type={el.type}\n              name={el.id}\n              placeholder={el.text}\n              defaultValue={el.value || \"\"}\n            />\n          )}\n        </Form.Group>\n      ))}\n      <Button\n        variant=\"primary\"\n        type=\"button\"\n        name=\"button\"\n        className=\"mt-0\"\n        onClick={handleSubmit}\n      >\n        {action.text}\n      </Button>\n    </Form>\n  );\n}\n","export const capitalizeText = s => (s && s[0].toUpperCase() + s.slice(1)) || \"\";","import React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { Routes, Route, useLocation } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { CToastify, CPage, CHeader } from \"./Component\";\nimport { AnimatePresence } from \"framer-motion/dist/framer-motion\";\nimport \"./styles.css\";\n\nexport default function App(props) {\n  const state = {\n    lang: props.value.lang,\n    assetsPath: props.value.assetsPath,\n    origin: props.value.origin,\n    dimention: props.value.dimention,\n    breakpoint: props.value.breakpoint,\n    pRatio: props.value.pRatio,\n    site: props.value.site\n  };\n\n  const location = useLocation();\n\n  return (\n    <Container className=\"m-0 p-0 App\" fluid>\n      <CHeader\n        value={{\n          menu: state.site.menu,\n          logo: state.site.logo,\n          assetsPath: state.assetsPath,\n          origin: state.origin,\n          lang: state.lang\n        }}\n      />\n      <AnimatePresence>\n        <Routes location={location} key={location.pathname}>\n          {state.site.menu.map((item, index) => (\n            <Route\n              key={Math.random()}\n              path={state.lang + item.url}\n              element={\n                <CPage\n                  value={{\n                    lang: state.lang,\n                    assetsPath: state.assetsPath,\n                    origin: state.origin,\n                    dimention: state.dimention,\n                    breakpoint: state.breakpoint,\n                    pRatio: state.pRatio,\n                    pages: state.site.pages,\n                    pageId: item.name\n                  }}\n                />\n              }\n            />\n          ))}\n        </Routes>\n      </AnimatePresence>\n      <br></br>\n      <footer className=\"mt-auto bg-dark text-white p-3 py-5\">\n        <Row className=\"mx-auto col-12 col-xxl-7 col-xl-8 col-lg-9 col-md-10 col-sm-12\">\n          {state.site.footer.map((item, id) => (\n            <Col key={Math.random()}>{ReactHtmlParser(item.text)}</Col>\n          ))}\n        </Row>\n        <Row className=\"text-center d-block pt-3\">{state.site.copyright}</Row>\n      </footer>\n      <CToastify />\n    </Container>\n  );\n}\n","//import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\n//Detect Screen Size\nconst { innerWidth, innerHeight, devicePixelRatio } = window;\nlet breakpoint = \"\";\nconst w = innerWidth * devicePixelRatio;\nif (w <= 576) {\n  breakpoint = \"_sm\";\n} else if (w <= 768) {\n  breakpoint = \"_md\";\n} else if (w <= 1200) {\n  breakpoint = \"_xl\";\n} else if (w <= 1400) {\n  breakpoint = \"_xxl\";\n} else {\n  breakpoint = \"\";\n}\n\nlet { hostname, origin, pathname } = document.location;\n\nconst pathArr = pathname.split(\"/\");\nconst lang = pathArr[1];\n\nconst assetsPath = \"/assets0867\";\nwindow.pageId = \"index\";\ndocument.getElementsByTagName(\"html\")[0].setAttribute(\"lang\", lang);\n\nconst init = async () => {\n  const url = \"https://b1r.site/json/\";\n  const rawSite = await axios.post(\n    url,\n    JSON.stringify({ file: hostname + \"_site-\" + lang })\n  );\n\n  const site = rawSite.data;\n\n  document\n    .querySelector('meta[name=\"apple-mobile-web-app-title\"]')\n    .setAttribute(\"content\", site.shortTitle);\n  document\n    .querySelector('meta[name=\"theme-color\"]')\n    .setAttribute(\"content\", site.theme.color);\n  document\n    .querySelector('meta[name=\"apple-mobile-web-app-status-bar-style\"]')\n    .setAttribute(\"content\", site.theme.color);\n  document\n    .querySelector('meta[name=\"msapplication-navbutton-color\"]')\n    .setAttribute(\"content\", site.theme.color);\n\n  site.menu.forEach((item) => {\n    const content = site.pages[item.name].content;\n    const refArr = content.filter((o) => o.id === \"ref\");\n    refArr.forEach((element) => {\n      const cont = site.pages[element.refPage].content.find(\n        (o) => o.uid === element.refId\n      );\n      content.push(cont);\n    });\n  });\n\n  root.render(\n    <BrowserRouter>\n      <App\n        className=\"App\"\n        value={{\n          lang: lang,\n          assetsPath: assetsPath,\n          origin: origin,\n          dimention: { w: innerWidth, h: innerHeight },\n          breakpoint: breakpoint,\n          pRatio: devicePixelRatio,\n          site: site\n        }}\n      />\n    </BrowserRouter>\n  );\n};\n\ninit();\n"],"sourceRoot":""}